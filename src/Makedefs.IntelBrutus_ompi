# Definitions for extended memory EMT64 Intel FORTRAN compiler
# with settings for AMD Opteron processor
# =========== === ===== === ======= ======== == =====

.SUFFIXES:	# Delete the default suffixes
.SUFFIXES: .o .f .F
.PRECIOUS: %.f

# Use pattern rule to indicate dependency on mpc
%.f:  mpc %.F 
	$(CPP) -P $(CPPFLAGS) $*.F | mpc > $@

.f.o:
	$(CFT) -c $(FFLAGS) $< -o $@

# clear implicit rule .F.o
%.o: %.F

#
# C-preprocessor from Intel compiler package. Note: in this case
# __IFC is a pre-defined macro, so there is no need to include it
# into CPPFLAGS.
#
#     CPP = fpp

      CPP = /lib/cpp -traditional
 CPPFLAGS = -D__IFC
#mm ETHZ Gonzales or Brutus Quadrrics MPI
CPPFLAGS = -D__IFC -I$(MPI_ROOT)/include

#mm Brutus Quadrics MPI
# CPPFLAGS = -D__IFC -I /usr/include/mpi
# CPPFLAGS = -D__IFC -I/cluster/admin/mpich2/include


#
# Compiler settings:  -fpp2 is required only if -openmp is present.
# Not having -fpp2 here just causes compiler warning (-fpp is set to
# level 2 by -openmp), but other than that has no effect.

# Switch -pc80 increases precision of floating point operation to
# 64 bits (vs. 53 bits double precision default).
#
# -qp  compiles and links for function profiling with  gprof(1);
#      this is the same as specifying -p or -pg.
#
# Setting  FFLAGS = -O2 -mp (or lower optimization level) is needed
# to pass ETALON_CHECK: -O3 causes roundoff-level differences from
# the length of innermost i-loop (the results still pass ETALON_CHECK
# if  NP_XI = NSUB_X = 1, regardless of partition in ETA-direction). 

# Flags collected under LARGE_MEM_FLAG are needed only if exceeding 
# 2 GBytes of memory: both -mcmodel (sets size of addressing pointers)
# and -i-dynamic (ensures proper linking with Intel dynamic libraries
# must be specified.


# OMP_FLAG = -fpp2 -openmp

LARGE_MEM_FLAG = -mcmodel=large -i-dynamic

#     CFT = ifc   $(OMP_FLAG) -pc80 -tpp7 -axW -xW
#      CFT = ifort $(OMP_FLAG) -pc80 -tpp7 -axW -xW -auto -stack_temps
#      CFT = ifort $(OMP_FLAG) -pc80 -tpp7 -axN -xN -align dcommon -auto -stack_temps
      #mm CFT = ifort $(OMP_FLAG) -pc80  -mtune=core2 -axT -xT -w95 -align dcommon -auto -stack_temps
                            # -xW
#      CFT = ifort $(OMP_FLAG) -pc80 -axW -xW -auto -stack_temps
      # Brutus  mpich2: CFT = mpif90 -f90=ifort $(OMP_FLAG) -pc80 -axW -xW -auto -stack_temps
#      CFT =/opt/hpmpi/bin/mpif90 $(OMP_FLAG) -pc80 -axW -xW -auto -stack_temps
     CFT =mpif90 $(OMP_FLAG) -pc80 -axW -xW -auto -stack_temps
     CFT =mpif90 $(OMP_FLAG) -fast -pc80 -msse2 -auto -stack_temps
     CFT =mpif90 $(OMP_FLAG) -pc80 -msse2 -auto -stack_temps

#      CFT =mpif90 

# -warn unused   

      LDR = $(CFT)
      LDR =mpif90 $(OMP_FLAG) -pc80 -msse2 -auto -stack_temps
#      LDR = mpif90 $(OMP_FLAG) -pc80 -tpp7 -axW -xW -w95 -align dcommon -auto -stack_temps

  FFLAGS =  -O3 -IPF_fma -ip $(LARGE_MEM_FLAG)
#    FFLAGS =  -O2 -mp -fpe0 -fp-model strict
# -prof_gen
#
#   FFLAGS = -g -check all -CA -CB -CS
#  FFLAGS = $(CPPFLAGS) -O0



 COMP_FILES = work.pc work.pcl ifort*

#   LCDF = -lnetcdf
#   LCDF =/usr/local/lib/libnetcdf.a
#  LCDF =/home/alex/netcdf/netcdf-3.6.2-beta3/libsrc/.libs/libnetcdf.a

#    LMPI = /opt/mpich-1.2.7p1/lib/libmpich.a

 LIBNCAR = -L/opt/ncarg-fce81/lib -L/usr/X11R6/lib -lncarg -lncarg_gks -lncarg_c -lX11 -lm


#LCDF = /home/alex/netcdf/netcdf-3.6.1-beta3/src/libsrc/libnetcdf.a

#   LCDF = -lnetcdf
# mm ETHZ Gonzales cluster
# mm ETHZ Brutus cluster
LCDF = -L/cluster/apps/netcdf/3.6.2/x86_64/intel/lib -lnetcdff -lnetcdf
#LCDF = -L/panfs/panasas.hpc-net.ethz.ch/uwis/muennicm/intel/lib -lnetcdf
# mm ETHZ Brutus/ Gonzales cluster Quadrics MPI
LMPI = -L$(MPI_ROOT)/lib -lmpi
# mm A look at mpif90 made this the likely libraries to link against
# mm Brutus OK:  LMPI = -L/cluster/admin/mpich2/lib -lmpich  -lpmpich -lpthread   -lrt

