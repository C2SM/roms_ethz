.SUFFIXES:	# Clear the default suffixes
.SUFFIXES: .o .f .F

# Keep intermediate %.f files
.PRECIOUS: %.f

# Clear implicit rules:
%.o: %.F
%.o: %.f

.INTERMEDIATE: %.f

# Using pattern rules
%.o: %.f
	$(MPIFC) -c $(FFLAGS) $<
%.f: %.F mpc
	$(CPP) $(CPPFTN) $(CPPFLAGS) $< | mpc > $@

CPP := cpp

CPPFTN := -P -traditional-cpp

# NetCDF 
NCINC := -I$(NETCDF)/include
CPPFLAGS += $(NCINC)
NCLIB := -L$(NETCDF)/../serial/lib -L$(NETCDF)/lib -lnetcdff -lnetcdf 

# Default: mpi executable
ifndef NOMPI
   MPIFC = mpif90
   ifdef I_MPI_ROOT
      CPPFLAGS += -I$(I_MPI_ROOT)/include64
   else
      CPPFLAGS += -I$(MPI_ROOT)/include
   endif
endif
MPIFC ?= $(FC)
LDR = $(MPIFC)

# Legacy ROMS macro names
LCDF := $(NCLIB)
CFT := $(FC)


FCOMP ?= $(strip $(notdir $(FC))) # use to identify the compiler

# ============= Intel compiler =============
ifeq ($(notdir $(FC)),ifort)
   FCFLAGS := -D__IFC
   COMP_FILES = *__genmod.f90 *__genmod.mod # cleanup stuff
   LARGE_MEM_FLAG=  # -mcmodel=medium # Sometimes needed for large tiles
   ifndef DEBUG
      # Default: Agressive optimisation for current CPU
      FFLAGS  = -O3 -fp-model source
   else
      #FFLAGS := -g -check all -CA -CB -CS
      #FFLAGS := -g -check arg_temp_created,bounds,pointers,uninit,format,output_conversion
      FFLAGS := -warn all -g -check arg_temp_created,bounds,pointers,uninit,format,output_conversion
   endif
   ifdef OPENMP
      OPENMP :=  -fpp2 -openmp
   endif
   ifdef PROFILE
      FFLAGS += -prof_gen
   endif
#endif
#
# ============= PGI compiler =============
else ifeq ($(FCOMP),pgf90) 
   FCFLAGS  := -DPGI 
   ifdef OPENMP
      OPENMP := -mp
   endif
   CPPFLAGS += -DINT_IARGC
   FFLAGS  := -mcmodel=medium -fast -O4 $(OPENMP)
# endif
# 
# ============= Gnu gfortran compiler =============
else ifeq ($(FCOMP),gfortran)
   FCFLAGS := -D_GNU
   ifdef OPENMP
      OPENMP :=  -fopenmp
   endif
   FFLAGS := -O3 $(OPENMP)
else
@echo Unknown Compiler: Add setting to Makedefs
endif

CPPFLAGS += $(FCFLAGS)

	

print-% : 
	@echo $* = '>'$($*)'<'


