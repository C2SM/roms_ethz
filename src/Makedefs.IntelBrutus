# Definitions for extended memory EMT64 Intel FORTRAN compiler
# with settings for AMD Opteron processor
# =========== === ===== === ======= ======== == =====

.SUFFIXES:	# Delete the default suffixes
.SUFFIXES: .o .f .F
.PRECIOUS: %.f
# Use pattern rule to indicate dependency on mpc
%.f:  mpc %.F 
	$(CPP) -P $(CPPFLAGS) $*.F | cat > $@
#	$(CPP) -P $(CPPFLAGS) $*.F | mpc > $@
.f.o:
	$(FC) -c $(FFLAGS) $< -o $@

# clear implicit rule .F.o
%.o: %.F

#
# C-preprocessor from Intel compiler package. Note: in this case
# __IFC is a pre-defined macro, so there is no need to include it
# into CPPFLAGS.
#
#     CPP = fpp

CPP = /lib/cpp -traditional
CPPFLAGS = -D__IFC -I$(MPI_ROOT)/include -I$(NETCDF)/include 


#
# Compiler settings:  -fpp2 is required only if -openmp is present.
# Not having -fpp2 here just causes compiler warning (-fpp is set to
# level 2 by -openmp), but other than that has no effect.

# Switch -pc80 increases precision of floating point operation to
# 64 bits (vs. 53 bits double precision default).
#
# -qp  compiles and links for function profiling with  gprof(1);
#      this is the same as specifying -p or -pg.
#
# Setting  FFLAGS = -O2 -mp (or lower optimization level) is needed
# to pass ETALON_CHECK: -O3 causes roundoff-level differences from
# the length of innermost i-loop (the results still pass ETALON_CHECK
# if  NP_XI = NSUB_X = 1, regardless of partition in ETA-direction). 

# Flags collected under LARGE_MEM_FLAG are needed only if exceeding 
# 2 GBytes of memory: both -mcmodel (sets size of addressing pointers)
# and -i-dynamic (ensures proper linking with Intel dynamic libraries
# must be specified.
# LARGE_MEM_FLAG = -mcmodel=medium -i-dynamic
LARGE_MEM_FLAG=  -mcmodel=small  -shared-intel
OMP_FLAG = # -fpp2 -openmp


FC =mpif90 
LDR = $(FC)

FFLAGS =  $(OMP_FLAG) -pc80 -132 -msse2 -auto -stack_temps      -O3 -IPF_fma -ip $(LARGE_MEM_FLAG) # -assume 2underscores
# Some usefule debugging options 
#   FFLAGS = -g -check all -CA -CB -CS

# File to include in make clean
COMP_FILES = work.pc work.pcl ifort*


#LCDF = -L$(NETCDF)/lib -lnetcdff -lnetcdf
LCDF = -L/opt/netcdf/3.6.2/lib -lnetcdf
#LCDF =-L/cluster/home/uwis/muennicm/local/netcdf/4.1.3/lib -L/cluster/home/uwis/muennicm/local/hdf5/1.8.6/lib -lhdf5_hl -lhdf5 -lz -lnetcdff -lnetcdf -lhdf5_hl -lhdf5 -lm /usr/lib64/libcurl.so.4 


